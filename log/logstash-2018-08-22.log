{"@timestamp":"2018-08-22T09:23:20.189+08:00","@version":1,"message":"Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@268f106e: startup date [Wed Aug 22 09:23:20 CST 2018]; root of context hierarchy","logger_name":"org.springframework.context.annotation.AnnotationConfigApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:20.607+08:00","@version":1,"message":"JSR-330 'javax.inject.Inject' annotation found and supported for autowiring","logger_name":"org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:20.658+08:00","@version":1,"message":"Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9ddc3752] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:21.006+08:00","@version":1,"message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:21.311+08:00","@version":1,"message":"Using JSON encoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:21.312+08:00","@version":1,"message":"Using JSON decoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:21.383+08:00","@version":1,"message":"Using XML encoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:21.383+08:00","@version":1,"message":"Using XML decoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:21.513+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:21.602+08:00","@version":1,"message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:21.602+08:00","@version":1,"message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:21.602+08:00","@version":1,"message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:21.603+08:00","@version":1,"message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:21.603+08:00","@version":1,"message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:21.603+08:00","@version":1,"message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:21.603+08:00","@version":1,"message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:23.693+08:00","@version":1,"message":"Request execution error","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)\r\n\tat com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)\r\n\tat com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1030)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:944)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:444)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:304)\r\n\tat org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:51)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:162)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration$$EnhancerBySpringCGLIB$$1828652.CGLIB$eurekaClient$1(<generated>)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration$$EnhancerBySpringCGLIB$$1828652$$FastClassBySpringCGLIB$$b4c3c5.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration$$EnhancerBySpringCGLIB$$1828652.eurekaClient(<generated>)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1181)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1075)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1181)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1075)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1272)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:303)\r\n\tat org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)\r\n\tat org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:138)\r\n\tat org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:84)\r\n\tat org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:62)\r\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)\r\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)\r\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)\r\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:122)\r\n\tat org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)\r\n\tat org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)\r\n\tat org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:325)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:296)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)\r\n\tat com.joinu.ddbes.serviceadmin.ServiceAdminApplication.main(ServiceAdminApplication.java:16)\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:589)\r\n\tat org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 94 common frames omitted\r\n"}
{"@timestamp":"2018-08-22T09:23:23.704+08:00","@version":1,"message":"Request execution failure","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2018-08-22T09:23:23.710+08:00","@version":1,"message":"DiscoveryClient_BOOTSTRAP/DESKTOP-L50U0EO:bootstrap - was unable to refresh its cache! status = Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1030)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:944)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:444)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:304)\r\n\tat org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:51)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:162)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration$$EnhancerBySpringCGLIB$$1828652.CGLIB$eurekaClient$1(<generated>)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration$$EnhancerBySpringCGLIB$$1828652$$FastClassBySpringCGLIB$$b4c3c5.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration$$EnhancerBySpringCGLIB$$1828652.eurekaClient(<generated>)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1181)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1075)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1181)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1075)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1272)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:303)\r\n\tat org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)\r\n\tat org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:138)\r\n\tat org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:84)\r\n\tat org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:62)\r\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)\r\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)\r\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)\r\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:122)\r\n\tat org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)\r\n\tat org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)\r\n\tat org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:325)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:296)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)\r\n\tat com.joinu.ddbes.serviceadmin.ServiceAdminApplication.main(ServiceAdminApplication.java:16)\r\n"}
{"@timestamp":"2018-08-22T09:23:23.715+08:00","@version":1,"message":"Using default backup registry implementation which does not do anything.","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2018-08-22T09:23:23.718+08:00","@version":1,"message":"Not registering with Eureka server per configuration","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:23.722+08:00","@version":1,"message":"Discovery Client initialized at timestamp 1534901003722 with initial instances count: 0","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:23.850+08:00","@version":1,"message":"Starting beans in phase 0","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:23.850+08:00","@version":1,"message":"Registering application bootstrap with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:23.852+08:00","@version":1,"message":"No instances found of configserver (spring-cloud-config-server)","logger_name":"org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2018-08-22T09:23:24.116+08:00","@version":1,"message":"Fetching config from server at: http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:25.182+08:00","@version":1,"message":"Could not locate PropertySource: I/O error on GET request for \"http://localhost:8888/service-admin/dev/master\": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2018-08-22T09:23:25.187+08:00","@version":1,"message":"No active profile set, falling back to default profiles: default","logger_name":"com.joinu.ddbes.serviceadmin.ServiceAdminApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:25.214+08:00","@version":1,"message":"Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@76563d26: startup date [Wed Aug 22 09:23:25 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@268f106e","logger_name":"org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:25.965+08:00","@version":1,"message":"BeanFactory id=b18a7a2b-872f-38a0-bd94-f9deeb553ab2","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:25.974+08:00","@version":1,"message":"JSR-330 'javax.inject.Inject' annotation found and supported for autowiring","logger_name":"org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:26.036+08:00","@version":1,"message":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9ddc3752] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:26.307+08:00","@version":1,"message":"Tomcat initialized with port(s): 8080 (http)","logger_name":"org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:26.323+08:00","@version":1,"message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:26.324+08:00","@version":1,"message":"Starting Servlet Engine: Apache Tomcat/8.5.31","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:26.433+08:00","@version":1,"message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:26.434+08:00","@version":1,"message":"Root WebApplicationContext: initialization completed in 1220 ms","logger_name":"org.springframework.web.context.ContextLoader","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:26.857+08:00","@version":1,"message":"No URLs will be polled as dynamic configuration sources.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"localhost-startStop-1","level":"WARN","level_value":30000}
{"@timestamp":"2018-08-22T09:23:26.857+08:00","@version":1,"message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:26.860+08:00","@version":1,"message":"DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@733de882","logger_name":"com.netflix.config.DynamicPropertyFactory","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:26.920+08:00","@version":1,"message":"Mapping servlet: 'dispatcherServlet' to [/]","logger_name":"org.springframework.boot.web.servlet.ServletRegistrationBean","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:26.921+08:00","@version":1,"message":"Mapping servlet: 'zuulServlet' to [/zuul/*]","logger_name":"org.springframework.boot.web.servlet.ServletRegistrationBean","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:26.924+08:00","@version":1,"message":"Mapping filter: 'metricsFilter' to: [/*]","logger_name":"org.springframework.boot.web.servlet.FilterRegistrationBean","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:26.925+08:00","@version":1,"message":"Mapping filter: 'characterEncodingFilter' to: [/*]","logger_name":"org.springframework.boot.web.servlet.FilterRegistrationBean","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:26.925+08:00","@version":1,"message":"Mapping filter: 'hiddenHttpMethodFilter' to: [/*]","logger_name":"org.springframework.boot.web.servlet.FilterRegistrationBean","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:26.926+08:00","@version":1,"message":"Mapping filter: 'httpPutFormContentFilter' to: [/*]","logger_name":"org.springframework.boot.web.servlet.FilterRegistrationBean","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:26.926+08:00","@version":1,"message":"Mapping filter: 'requestContextFilter' to: [/*]","logger_name":"org.springframework.boot.web.servlet.FilterRegistrationBean","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:26.926+08:00","@version":1,"message":"Mapping filter: 'webRequestLoggingFilter' to: [/*]","logger_name":"org.springframework.boot.web.servlet.FilterRegistrationBean","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:26.926+08:00","@version":1,"message":"Mapping filter: 'applicationContextIdFilter' to: [/*]","logger_name":"org.springframework.boot.web.servlet.FilterRegistrationBean","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:26.934+08:00","@version":1,"message":"Starting filter initializer context listener","logger_name":"org.springframework.cloud.netflix.zuul.ZuulFilterInitializer","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.317+08:00","@version":1,"message":"jolokia: No access restrictor found, access to any MBean is allowed","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.443+08:00","@version":1,"message":"Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@76563d26: startup date [Wed Aug 22 09:23:25 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@268f106e","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.499+08:00","@version":1,"message":"Mapped \"{[/error]}\" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.500+08:00","@version":1,"message":"Mapped \"{[/error],produces=[text/html]}\" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.504+08:00","@version":1,"message":"Mapped \"{[/api/applications/{id}],methods=[GET]}\" onto public org.springframework.http.ResponseEntity<?> de.codecentric.boot.admin.registry.web.RegistryController.get(java.lang.String)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.504+08:00","@version":1,"message":"Mapped \"{[/api/applications],methods=[POST]}\" onto public org.springframework.http.ResponseEntity<de.codecentric.boot.admin.model.Application> de.codecentric.boot.admin.registry.web.RegistryController.register(de.codecentric.boot.admin.model.Application)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.504+08:00","@version":1,"message":"Mapped \"{[/api/applications/{id}],methods=[DELETE]}\" onto public org.springframework.http.ResponseEntity<?> de.codecentric.boot.admin.registry.web.RegistryController.unregister(java.lang.String)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.505+08:00","@version":1,"message":"Mapped \"{[/api/applications],methods=[GET]}\" onto public java.util.Collection<de.codecentric.boot.admin.model.Application> de.codecentric.boot.admin.registry.web.RegistryController.applications(java.lang.String)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.508+08:00","@version":1,"message":"Mapped \"{[/api/journal],produces=[text/event-stream]}\" onto public org.springframework.web.servlet.mvc.method.annotation.SseEmitter de.codecentric.boot.admin.journal.web.JournalController.getJournalEvents()","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.508+08:00","@version":1,"message":"Mapped \"{[/api/journal],produces=[application/json]}\" onto public java.util.Collection<de.codecentric.boot.admin.event.ClientApplicationEvent> de.codecentric.boot.admin.journal.web.JournalController.getJournal()","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.517+08:00","@version":1,"message":"Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.530+08:00","@version":1,"message":"Locations list is empty. No resources will be served unless a custom ResourceResolver is configured as an alternative to PathResourceResolver.","logger_name":"org.springframework.web.servlet.resource.ResourceHttpRequestHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2018-08-22T09:23:27.530+08:00","@version":1,"message":"Locations list is empty. No resources will be served unless a custom ResourceResolver is configured as an alternative to PathResourceResolver.","logger_name":"org.springframework.web.servlet.resource.ResourceHttpRequestHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2018-08-22T09:23:27.531+08:00","@version":1,"message":"Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.531+08:00","@version":1,"message":"Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.531+08:00","@version":1,"message":"Mapped URL path [/all-modules.css] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.531+08:00","@version":1,"message":"Mapped URL path [/all-modules.js] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.562+08:00","@version":1,"message":"Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.920+08:00","@version":1,"message":"Mapped \"{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.920+08:00","@version":1,"message":"Mapped \"{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.921+08:00","@version":1,"message":"Mapped \"{[/routes || /routes.json],methods=[POST]}\" onto public java.util.Map<java.lang.String, java.lang.String> org.springframework.cloud.netflix.zuul.RoutesEndpoint.reset()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.921+08:00","@version":1,"message":"Mapped \"{[/routes || /routes.json],methods=[GET]}\" onto public java.util.Map<java.lang.String, java.lang.String> org.springframework.cloud.netflix.zuul.RoutesEndpoint.getRoutes()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.921+08:00","@version":1,"message":"Mapped \"{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.922+08:00","@version":1,"message":"Mapped \"{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.922+08:00","@version":1,"message":"Mapped \"{[/refresh || /refresh.json],methods=[POST]}\" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.924+08:00","@version":1,"message":"Mapped \"{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.925+08:00","@version":1,"message":"Mapped \"{[/pause || /pause.json],methods=[POST]}\" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.925+08:00","@version":1,"message":"Mapped \"{[/restart || /restart.json],methods=[POST]}\" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.925+08:00","@version":1,"message":"Mapped \"{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.926+08:00","@version":1,"message":"Mapped \"{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.927+08:00","@version":1,"message":"Mapped \"{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.927+08:00","@version":1,"message":"Mapped \"{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.929+08:00","@version":1,"message":"Mapped \"{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.929+08:00","@version":1,"message":"Mapped \"{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.929+08:00","@version":1,"message":"Mapped \"{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.930+08:00","@version":1,"message":"Mapped \"{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.930+08:00","@version":1,"message":"Mapped \"{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.930+08:00","@version":1,"message":"Mapped \"{[/env],methods=[POST]}\" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.930+08:00","@version":1,"message":"Mapped \"{[/env/reset],methods=[POST]}\" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.932+08:00","@version":1,"message":"Mapped \"{[/jolokia/**]}\" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.932+08:00","@version":1,"message":"Mapped \"{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.933+08:00","@version":1,"message":"Mapped \"{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.933+08:00","@version":1,"message":"Mapped \"{[/resume || /resume.json],methods=[POST]}\" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.933+08:00","@version":1,"message":"Mapped \"{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.934+08:00","@version":1,"message":"Mapped \"{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}\" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:27.934+08:00","@version":1,"message":"Mapped \"{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.028+08:00","@version":1,"message":"No spring.application.name found, defaulting to 'application'","logger_name":"org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2018-08-22T09:23:28.028+08:00","@version":1,"message":"No URLs will be polled as dynamic configuration sources.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2018-08-22T09:23:28.028+08:00","@version":1,"message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.038+08:00","@version":1,"message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.043+08:00","@version":1,"message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.063+08:00","@version":1,"message":"Mapped \"{[/api/applications/{id}],methods=[GET]}\" onto public org.springframework.http.ResponseEntity<?> de.codecentric.boot.admin.registry.web.RegistryController.get(java.lang.String)","logger_name":"de.codecentric.boot.admin.web.PrefixHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.063+08:00","@version":1,"message":"Mapped \"{[/api/applications],methods=[POST]}\" onto public org.springframework.http.ResponseEntity<de.codecentric.boot.admin.model.Application> de.codecentric.boot.admin.registry.web.RegistryController.register(de.codecentric.boot.admin.model.Application)","logger_name":"de.codecentric.boot.admin.web.PrefixHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.063+08:00","@version":1,"message":"Mapped \"{[/api/applications/{id}],methods=[DELETE]}\" onto public org.springframework.http.ResponseEntity<?> de.codecentric.boot.admin.registry.web.RegistryController.unregister(java.lang.String)","logger_name":"de.codecentric.boot.admin.web.PrefixHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.063+08:00","@version":1,"message":"Mapped \"{[/api/applications],methods=[GET]}\" onto public java.util.Collection<de.codecentric.boot.admin.model.Application> de.codecentric.boot.admin.registry.web.RegistryController.applications(java.lang.String)","logger_name":"de.codecentric.boot.admin.web.PrefixHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.064+08:00","@version":1,"message":"Mapped \"{[/api/journal],produces=[text/event-stream]}\" onto public org.springframework.web.servlet.mvc.method.annotation.SseEmitter de.codecentric.boot.admin.journal.web.JournalController.getJournalEvents()","logger_name":"de.codecentric.boot.admin.web.PrefixHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.064+08:00","@version":1,"message":"Mapped \"{[/api/journal],produces=[application/json]}\" onto public java.util.Collection<de.codecentric.boot.admin.event.ClientApplicationEvent> de.codecentric.boot.admin.journal.web.JournalController.getJournal()","logger_name":"de.codecentric.boot.admin.web.PrefixHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.082+08:00","@version":1,"message":"Initializing ExecutorService  'updateTaskScheduler'","logger_name":"org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.164+08:00","@version":1,"message":"Registering beans for JMX exposure on startup","logger_name":"org.springframework.jmx.export.annotation.AnnotationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.171+08:00","@version":1,"message":"Bean with name 'refreshScope' has been autodetected for JMX exposure","logger_name":"org.springframework.jmx.export.annotation.AnnotationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.171+08:00","@version":1,"message":"Bean with name 'environmentManager' has been autodetected for JMX exposure","logger_name":"org.springframework.jmx.export.annotation.AnnotationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.173+08:00","@version":1,"message":"Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure","logger_name":"org.springframework.jmx.export.annotation.AnnotationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.173+08:00","@version":1,"message":"Bean with name 'refreshEndpoint' has been autodetected for JMX exposure","logger_name":"org.springframework.jmx.export.annotation.AnnotationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.174+08:00","@version":1,"message":"Bean with name 'restartEndpoint' has been autodetected for JMX exposure","logger_name":"org.springframework.jmx.export.annotation.AnnotationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.174+08:00","@version":1,"message":"Bean with name 'zuulEndpoint' has been autodetected for JMX exposure","logger_name":"org.springframework.jmx.export.annotation.AnnotationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.177+08:00","@version":1,"message":"Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]","logger_name":"org.springframework.jmx.export.annotation.AnnotationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.187+08:00","@version":1,"message":"Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]","logger_name":"org.springframework.jmx.export.annotation.AnnotationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.193+08:00","@version":1,"message":"Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]","logger_name":"org.springframework.jmx.export.annotation.AnnotationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.201+08:00","@version":1,"message":"Located managed bean 'zuulEndpoint': registering with JMX server as MBean [org.springframework.cloud.netflix.zuul:name=zuulEndpoint,type=RoutesEndpoint]","logger_name":"org.springframework.jmx.export.annotation.AnnotationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.203+08:00","@version":1,"message":"Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=76563d26,type=ConfigurationPropertiesRebinder]","logger_name":"org.springframework.jmx.export.annotation.AnnotationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.206+08:00","@version":1,"message":"Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]","logger_name":"org.springframework.jmx.export.annotation.AnnotationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.386+08:00","@version":1,"message":"jolokia: No access restrictor found, access to any MBean is allowed","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.389+08:00","@version":1,"message":"jolokia: jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=c93db8b3-f4aa-4b3e-bc2d-c4eace9a5fe3, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.390+08:00","@version":1,"message":"jolokia: Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.390+08:00","@version":1,"message":"jolokia: Jolokia Discovery MBean registration is skipped because there is already one registered.","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.493+08:00","@version":1,"message":"Starting beans in phase 0","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.497+08:00","@version":1,"message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.508+08:00","@version":1,"message":"Using JSON encoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.508+08:00","@version":1,"message":"Using JSON decoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.508+08:00","@version":1,"message":"Using XML encoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.508+08:00","@version":1,"message":"Using XML decoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.551+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.552+08:00","@version":1,"message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.552+08:00","@version":1,"message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.552+08:00","@version":1,"message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.552+08:00","@version":1,"message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.552+08:00","@version":1,"message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.552+08:00","@version":1,"message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:28.552+08:00","@version":1,"message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:30.559+08:00","@version":1,"message":"Request execution error","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)\r\n\tat com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)\r\n\tat com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1030)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:944)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:444)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:304)\r\n\tat org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:51)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:192)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$a5453071.CGLIB$eurekaClient$1(<generated>)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$a5453071$$FastClassBySpringCGLIB$$3658672e.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$a5453071.eurekaClient(<generated>)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1181)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1075)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$2.getObject(AbstractBeanFactory.java:351)\r\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:359)\r\n\tat org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:176)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:346)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)\r\n\tat org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)\r\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:192)\r\n\tat com.sun.proxy.$Proxy104.getApplications(Unknown Source)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration.maybeInitializeClient(EurekaDiscoveryClientConfiguration.java:120)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration.start(EurekaDiscoveryClientConfiguration.java:97)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:173)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:50)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:346)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:149)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:112)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:880)\r\n\tat org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:144)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)\r\n\tat org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:303)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)\r\n\tat com.joinu.ddbes.serviceadmin.ServiceAdminApplication.main(ServiceAdminApplication.java:16)\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:589)\r\n\tat org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 67 common frames omitted\r\n"}
{"@timestamp":"2018-08-22T09:23:30.563+08:00","@version":1,"message":"Request execution failure","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2018-08-22T09:23:30.563+08:00","@version":1,"message":"DiscoveryClient_UNKNOWN/DESKTOP-L50U0EO - was unable to refresh its cache! status = Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1030)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:944)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:444)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:304)\r\n\tat org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:51)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:192)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$a5453071.CGLIB$eurekaClient$1(<generated>)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$a5453071$$FastClassBySpringCGLIB$$3658672e.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$a5453071.eurekaClient(<generated>)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1181)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1075)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$2.getObject(AbstractBeanFactory.java:351)\r\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:359)\r\n\tat org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:176)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:346)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)\r\n\tat org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)\r\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:192)\r\n\tat com.sun.proxy.$Proxy104.getApplications(Unknown Source)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration.maybeInitializeClient(EurekaDiscoveryClientConfiguration.java:120)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration.start(EurekaDiscoveryClientConfiguration.java:97)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:173)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:50)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:346)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:149)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:112)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:880)\r\n\tat org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:144)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)\r\n\tat org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:303)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)\r\n\tat com.joinu.ddbes.serviceadmin.ServiceAdminApplication.main(ServiceAdminApplication.java:16)\r\n"}
{"@timestamp":"2018-08-22T09:23:30.564+08:00","@version":1,"message":"Using default backup registry implementation which does not do anything.","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2018-08-22T09:23:30.565+08:00","@version":1,"message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:30.566+08:00","@version":1,"message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:30.568+08:00","@version":1,"message":"Discovery Client initialized at timestamp 1534901010568 with initial instances count: 0","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:30.593+08:00","@version":1,"message":"Registering application unknown with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:30.594+08:00","@version":1,"message":"Saw local status change event StatusChangeEvent [timestamp=1534901010594, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:30.597+08:00","@version":1,"message":"DiscoveryClient_UNKNOWN/DESKTOP-L50U0EO: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:30.666+08:00","@version":1,"message":"No instances found of configserver (spring-cloud-config-server)","logger_name":"org.springframework.cloud.config.client.DiscoveryClientConfigServiceBootstrapConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2018-08-22T09:23:30.698+08:00","@version":1,"message":"Tomcat started on port(s): 8080 (http)","logger_name":"org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:30.698+08:00","@version":1,"message":"Updating port to 8080","logger_name":"org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:30.699+08:00","@version":1,"message":"Updating port to 8080","logger_name":"org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:30.706+08:00","@version":1,"message":"Started ServiceAdminApplication in 11.246 seconds (JVM running for 11.985)","logger_name":"com.joinu.ddbes.serviceadmin.ServiceAdminApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:31.111+08:00","@version":1,"message":"Fetching config from server at: http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"RMI TCP Connection(9)-127.0.0.1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:23:32.117+08:00","@version":1,"message":"Could not locate PropertySource: I/O error on GET request for \"http://localhost:8888/service-admin/dev/master\": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"RMI TCP Connection(9)-127.0.0.1","level":"WARN","level_value":30000}
{"@timestamp":"2018-08-22T09:23:32.627+08:00","@version":1,"message":"Request execution error","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:815)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:589)\r\n\tat org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 30 common frames omitted\r\n"}
{"@timestamp":"2018-08-22T09:23:32.633+08:00","@version":1,"message":"Request execution failure","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2018-08-22T09:23:32.633+08:00","@version":1,"message":"DiscoveryClient_UNKNOWN/DESKTOP-L50U0EO - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:815)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2018-08-22T09:23:32.634+08:00","@version":1,"message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:815)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2018-08-22T09:24:00.565+08:00","@version":1,"message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:24:00.567+08:00","@version":1,"message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:24:00.567+08:00","@version":1,"message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:24:00.568+08:00","@version":1,"message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:24:00.568+08:00","@version":1,"message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:24:00.569+08:00","@version":1,"message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:24:00.570+08:00","@version":1,"message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:24:02.588+08:00","@version":1,"message":"Request execution error","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)\r\n\tat com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:832)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1396)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:589)\r\n\tat org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 27 common frames omitted\r\n"}
{"@timestamp":"2018-08-22T09:24:02.589+08:00","@version":1,"message":"Request execution error","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)\r\n\tat com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)\r\n\tat com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1030)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:944)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1468)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1435)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:589)\r\n\tat org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 30 common frames omitted\r\n"}
{"@timestamp":"2018-08-22T09:24:02.592+08:00","@version":1,"message":"Request execution failure","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2018-08-22T09:24:02.594+08:00","@version":1,"message":"Request execution failure","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2018-08-22T09:24:02.594+08:00","@version":1,"message":"DiscoveryClient_UNKNOWN/DESKTOP-L50U0EO - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:832)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1396)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2018-08-22T09:24:02.594+08:00","@version":1,"message":"DiscoveryClient_UNKNOWN/DESKTOP-L50U0EO - was unable to refresh its cache! status = Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1030)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:944)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1468)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1435)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2018-08-22T09:24:02.638+08:00","@version":1,"message":"DiscoveryClient_UNKNOWN/DESKTOP-L50U0EO: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:24:04.655+08:00","@version":1,"message":"Request execution error","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:815)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:589)\r\n\tat org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 29 common frames omitted\r\n"}
{"@timestamp":"2018-08-22T09:24:04.659+08:00","@version":1,"message":"Request execution failure","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2018-08-22T09:24:04.661+08:00","@version":1,"message":"DiscoveryClient_UNKNOWN/DESKTOP-L50U0EO - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:815)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2018-08-22T09:24:04.662+08:00","@version":1,"message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:815)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2018-08-22T09:31:03.430+08:00","@version":1,"message":"Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@332a7fce: startup date [Wed Aug 22 09:31:03 CST 2018]; root of context hierarchy","logger_name":"org.springframework.context.annotation.AnnotationConfigApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:03.742+08:00","@version":1,"message":"JSR-330 'javax.inject.Inject' annotation found and supported for autowiring","logger_name":"org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:03.776+08:00","@version":1,"message":"Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9ed1a748] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:04.173+08:00","@version":1,"message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:04.511+08:00","@version":1,"message":"Using JSON encoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:04.512+08:00","@version":1,"message":"Using JSON decoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:04.586+08:00","@version":1,"message":"Using XML encoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:04.586+08:00","@version":1,"message":"Using XML decoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:04.780+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:04.879+08:00","@version":1,"message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:04.880+08:00","@version":1,"message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:04.880+08:00","@version":1,"message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:04.881+08:00","@version":1,"message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:04.881+08:00","@version":1,"message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:04.881+08:00","@version":1,"message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:04.881+08:00","@version":1,"message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:05.049+08:00","@version":1,"message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:05.050+08:00","@version":1,"message":"Not registering with Eureka server per configuration","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:05.053+08:00","@version":1,"message":"Discovery Client initialized at timestamp 1534901465053 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:05.199+08:00","@version":1,"message":"Starting beans in phase 0","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:05.199+08:00","@version":1,"message":"Registering application bootstrap with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:05.435+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:06.899+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:06.900+08:00","@version":1,"message":"Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='git@code.ddbes.com:zhangjb/springcloudconfig.git/service-admin/service-admin-dev.yml'}]]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:06.903+08:00","@version":1,"message":"No active profile set, falling back to default profiles: default","logger_name":"com.joinu.ddbes.serviceadmin.ServiceAdminApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:06.912+08:00","@version":1,"message":"Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5a30722c: startup date [Wed Aug 22 09:31:06 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@332a7fce","logger_name":"org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:07.488+08:00","@version":1,"message":"BeanFactory id=03158ba1-ccc8-3ec7-8737-576558cd6e42","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:07.501+08:00","@version":1,"message":"JSR-330 'javax.inject.Inject' annotation found and supported for autowiring","logger_name":"org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:07.589+08:00","@version":1,"message":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9ed1a748] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:07.896+08:00","@version":1,"message":"Tomcat initialized with port(s): 8880 (http)","logger_name":"org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:07.913+08:00","@version":1,"message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:07.914+08:00","@version":1,"message":"Starting Servlet Engine: Apache Tomcat/8.5.31","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:08.027+08:00","@version":1,"message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:08.027+08:00","@version":1,"message":"Root WebApplicationContext: initialization completed in 1116 ms","logger_name":"org.springframework.web.context.ContextLoader","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:08.536+08:00","@version":1,"message":"No URLs will be polled as dynamic configuration sources.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"localhost-startStop-1","level":"WARN","level_value":30000}
{"@timestamp":"2018-08-22T09:31:08.537+08:00","@version":1,"message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:08.540+08:00","@version":1,"message":"DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1f56db2f","logger_name":"com.netflix.config.DynamicPropertyFactory","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:08.635+08:00","@version":1,"message":"Mapping servlet: 'dispatcherServlet' to [/]","logger_name":"org.springframework.boot.web.servlet.ServletRegistrationBean","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:08.636+08:00","@version":1,"message":"Mapping servlet: 'zuulServlet' to [/zuul/*]","logger_name":"org.springframework.boot.web.servlet.ServletRegistrationBean","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:08.639+08:00","@version":1,"message":"Mapping filter: 'metricsFilter' to: [/*]","logger_name":"org.springframework.boot.web.servlet.FilterRegistrationBean","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:08.640+08:00","@version":1,"message":"Mapping filter: 'characterEncodingFilter' to: [/*]","logger_name":"org.springframework.boot.web.servlet.FilterRegistrationBean","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:08.641+08:00","@version":1,"message":"Mapping filter: 'hiddenHttpMethodFilter' to: [/*]","logger_name":"org.springframework.boot.web.servlet.FilterRegistrationBean","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:08.641+08:00","@version":1,"message":"Mapping filter: 'httpPutFormContentFilter' to: [/*]","logger_name":"org.springframework.boot.web.servlet.FilterRegistrationBean","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:08.641+08:00","@version":1,"message":"Mapping filter: 'requestContextFilter' to: [/*]","logger_name":"org.springframework.boot.web.servlet.FilterRegistrationBean","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:08.641+08:00","@version":1,"message":"Mapping filter: 'webRequestLoggingFilter' to: [/*]","logger_name":"org.springframework.boot.web.servlet.FilterRegistrationBean","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:08.642+08:00","@version":1,"message":"Mapping filter: 'applicationContextIdFilter' to: [/*]","logger_name":"org.springframework.boot.web.servlet.FilterRegistrationBean","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:08.652+08:00","@version":1,"message":"Starting filter initializer context listener","logger_name":"org.springframework.cloud.netflix.zuul.ZuulFilterInitializer","thread_name":"localhost-startStop-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:09.182+08:00","@version":1,"message":"jolokia: No access restrictor found, access to any MBean is allowed","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:09.361+08:00","@version":1,"message":"Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5a30722c: startup date [Wed Aug 22 09:31:06 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@332a7fce","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:09.439+08:00","@version":1,"message":"Mapped \"{[/error]}\" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:09.440+08:00","@version":1,"message":"Mapped \"{[/error],produces=[text/html]}\" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:09.444+08:00","@version":1,"message":"Mapped \"{[/api/applications/{id}],methods=[GET]}\" onto public org.springframework.http.ResponseEntity<?> de.codecentric.boot.admin.registry.web.RegistryController.get(java.lang.String)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:09.445+08:00","@version":1,"message":"Mapped \"{[/api/applications],methods=[POST]}\" onto public org.springframework.http.ResponseEntity<de.codecentric.boot.admin.model.Application> de.codecentric.boot.admin.registry.web.RegistryController.register(de.codecentric.boot.admin.model.Application)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:09.447+08:00","@version":1,"message":"Mapped \"{[/api/applications/{id}],methods=[DELETE]}\" onto public org.springframework.http.ResponseEntity<?> de.codecentric.boot.admin.registry.web.RegistryController.unregister(java.lang.String)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:09.447+08:00","@version":1,"message":"Mapped \"{[/api/applications],methods=[GET]}\" onto public java.util.Collection<de.codecentric.boot.admin.model.Application> de.codecentric.boot.admin.registry.web.RegistryController.applications(java.lang.String)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:09.449+08:00","@version":1,"message":"Mapped \"{[/api/journal],produces=[text/event-stream]}\" onto public org.springframework.web.servlet.mvc.method.annotation.SseEmitter de.codecentric.boot.admin.journal.web.JournalController.getJournalEvents()","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:09.450+08:00","@version":1,"message":"Mapped \"{[/api/journal],produces=[application/json]}\" onto public java.util.Collection<de.codecentric.boot.admin.event.ClientApplicationEvent> de.codecentric.boot.admin.journal.web.JournalController.getJournal()","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:09.463+08:00","@version":1,"message":"Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:09.478+08:00","@version":1,"message":"Locations list is empty. No resources will be served unless a custom ResourceResolver is configured as an alternative to PathResourceResolver.","logger_name":"org.springframework.web.servlet.resource.ResourceHttpRequestHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2018-08-22T09:31:09.478+08:00","@version":1,"message":"Locations list is empty. No resources will be served unless a custom ResourceResolver is configured as an alternative to PathResourceResolver.","logger_name":"org.springframework.web.servlet.resource.ResourceHttpRequestHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2018-08-22T09:31:09.479+08:00","@version":1,"message":"Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:09.480+08:00","@version":1,"message":"Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:09.480+08:00","@version":1,"message":"Mapped URL path [/all-modules.css] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:09.480+08:00","@version":1,"message":"Mapped URL path [/all-modules.js] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:09.522+08:00","@version":1,"message":"Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.081+08:00","@version":1,"message":"Mapped \"{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.082+08:00","@version":1,"message":"Mapped \"{[/restart || /restart.json],methods=[POST]}\" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.082+08:00","@version":1,"message":"Mapped \"{[/pause || /pause.json],methods=[POST]}\" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.082+08:00","@version":1,"message":"Mapped \"{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.084+08:00","@version":1,"message":"Mapped \"{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.084+08:00","@version":1,"message":"Mapped \"{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.086+08:00","@version":1,"message":"Mapped \"{[/refresh || /refresh.json],methods=[POST]}\" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.088+08:00","@version":1,"message":"Mapped \"{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}\" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.089+08:00","@version":1,"message":"Mapped \"{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.090+08:00","@version":1,"message":"Mapped \"{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.090+08:00","@version":1,"message":"Mapped \"{[/resume || /resume.json],methods=[POST]}\" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.090+08:00","@version":1,"message":"Mapped \"{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.091+08:00","@version":1,"message":"Mapped \"{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.091+08:00","@version":1,"message":"Mapped \"{[/env],methods=[POST]}\" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.091+08:00","@version":1,"message":"Mapped \"{[/env/reset],methods=[POST]}\" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.093+08:00","@version":1,"message":"Mapped \"{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.093+08:00","@version":1,"message":"Mapped \"{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.093+08:00","@version":1,"message":"Mapped \"{[/routes || /routes.json],methods=[POST]}\" onto public java.util.Map<java.lang.String, java.lang.String> org.springframework.cloud.netflix.zuul.RoutesEndpoint.reset()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.094+08:00","@version":1,"message":"Mapped \"{[/routes || /routes.json],methods=[GET]}\" onto public java.util.Map<java.lang.String, java.lang.String> org.springframework.cloud.netflix.zuul.RoutesEndpoint.getRoutes()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.095+08:00","@version":1,"message":"Mapped \"{[/jolokia/**]}\" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.096+08:00","@version":1,"message":"Mapped \"{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.097+08:00","@version":1,"message":"Mapped \"{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.097+08:00","@version":1,"message":"Mapped \"{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.098+08:00","@version":1,"message":"Mapped \"{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.098+08:00","@version":1,"message":"Mapped \"{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.100+08:00","@version":1,"message":"Mapped \"{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.100+08:00","@version":1,"message":"Mapped \"{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.100+08:00","@version":1,"message":"Mapped \"{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()","logger_name":"org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.232+08:00","@version":1,"message":"No URLs will be polled as dynamic configuration sources.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2018-08-22T09:31:10.232+08:00","@version":1,"message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.243+08:00","@version":1,"message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.250+08:00","@version":1,"message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.314+08:00","@version":1,"message":"Mapped \"{[/api/applications/{id}],methods=[GET]}\" onto public org.springframework.http.ResponseEntity<?> de.codecentric.boot.admin.registry.web.RegistryController.get(java.lang.String)","logger_name":"de.codecentric.boot.admin.web.PrefixHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.315+08:00","@version":1,"message":"Mapped \"{[/api/applications],methods=[POST]}\" onto public org.springframework.http.ResponseEntity<de.codecentric.boot.admin.model.Application> de.codecentric.boot.admin.registry.web.RegistryController.register(de.codecentric.boot.admin.model.Application)","logger_name":"de.codecentric.boot.admin.web.PrefixHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.315+08:00","@version":1,"message":"Mapped \"{[/api/applications/{id}],methods=[DELETE]}\" onto public org.springframework.http.ResponseEntity<?> de.codecentric.boot.admin.registry.web.RegistryController.unregister(java.lang.String)","logger_name":"de.codecentric.boot.admin.web.PrefixHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.315+08:00","@version":1,"message":"Mapped \"{[/api/applications],methods=[GET]}\" onto public java.util.Collection<de.codecentric.boot.admin.model.Application> de.codecentric.boot.admin.registry.web.RegistryController.applications(java.lang.String)","logger_name":"de.codecentric.boot.admin.web.PrefixHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.316+08:00","@version":1,"message":"Mapped \"{[/api/journal],produces=[text/event-stream]}\" onto public org.springframework.web.servlet.mvc.method.annotation.SseEmitter de.codecentric.boot.admin.journal.web.JournalController.getJournalEvents()","logger_name":"de.codecentric.boot.admin.web.PrefixHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.316+08:00","@version":1,"message":"Mapped \"{[/api/journal],produces=[application/json]}\" onto public java.util.Collection<de.codecentric.boot.admin.event.ClientApplicationEvent> de.codecentric.boot.admin.journal.web.JournalController.getJournal()","logger_name":"de.codecentric.boot.admin.web.PrefixHandlerMapping","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.343+08:00","@version":1,"message":"Initializing ExecutorService  'updateTaskScheduler'","logger_name":"org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.583+08:00","@version":1,"message":"Registering beans for JMX exposure on startup","logger_name":"org.springframework.jmx.export.annotation.AnnotationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.592+08:00","@version":1,"message":"Bean with name 'refreshScope' has been autodetected for JMX exposure","logger_name":"org.springframework.jmx.export.annotation.AnnotationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.592+08:00","@version":1,"message":"Bean with name 'environmentManager' has been autodetected for JMX exposure","logger_name":"org.springframework.jmx.export.annotation.AnnotationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.594+08:00","@version":1,"message":"Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure","logger_name":"org.springframework.jmx.export.annotation.AnnotationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.595+08:00","@version":1,"message":"Bean with name 'refreshEndpoint' has been autodetected for JMX exposure","logger_name":"org.springframework.jmx.export.annotation.AnnotationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.595+08:00","@version":1,"message":"Bean with name 'restartEndpoint' has been autodetected for JMX exposure","logger_name":"org.springframework.jmx.export.annotation.AnnotationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.597+08:00","@version":1,"message":"Bean with name 'zuulEndpoint' has been autodetected for JMX exposure","logger_name":"org.springframework.jmx.export.annotation.AnnotationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.600+08:00","@version":1,"message":"Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]","logger_name":"org.springframework.jmx.export.annotation.AnnotationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.615+08:00","@version":1,"message":"Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]","logger_name":"org.springframework.jmx.export.annotation.AnnotationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.625+08:00","@version":1,"message":"Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]","logger_name":"org.springframework.jmx.export.annotation.AnnotationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.642+08:00","@version":1,"message":"Located managed bean 'zuulEndpoint': registering with JMX server as MBean [org.springframework.cloud.netflix.zuul:name=zuulEndpoint,type=RoutesEndpoint]","logger_name":"org.springframework.jmx.export.annotation.AnnotationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.645+08:00","@version":1,"message":"Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5a30722c,type=ConfigurationPropertiesRebinder]","logger_name":"org.springframework.jmx.export.annotation.AnnotationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.653+08:00","@version":1,"message":"Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]","logger_name":"org.springframework.jmx.export.annotation.AnnotationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.961+08:00","@version":1,"message":"jolokia: No access restrictor found, access to any MBean is allowed","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.964+08:00","@version":1,"message":"jolokia: jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=1c0d4361-d3ac-4b03-a56e-fe07bbca62b0, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.965+08:00","@version":1,"message":"jolokia: Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:10.965+08:00","@version":1,"message":"jolokia: Jolokia Discovery MBean registration is skipped because there is already one registered.","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:11.072+08:00","@version":1,"message":"Starting beans in phase 0","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:11.075+08:00","@version":1,"message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:11.084+08:00","@version":1,"message":"Using JSON encoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:11.085+08:00","@version":1,"message":"Using JSON decoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:11.085+08:00","@version":1,"message":"Using XML encoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:11.085+08:00","@version":1,"message":"Using XML decoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:11.173+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:11.174+08:00","@version":1,"message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:11.174+08:00","@version":1,"message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:11.174+08:00","@version":1,"message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:11.174+08:00","@version":1,"message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:11.174+08:00","@version":1,"message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:11.174+08:00","@version":1,"message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:11.174+08:00","@version":1,"message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:11.177+08:00","@version":1,"message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:11.178+08:00","@version":1,"message":"Starting heartbeat executor: renew interval is: 3","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:11.180+08:00","@version":1,"message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:11.181+08:00","@version":1,"message":"Discovery Client initialized at timestamp 1534901471181 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:11.194+08:00","@version":1,"message":"Registering application ddbes-service-admin with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:11.195+08:00","@version":1,"message":"Saw local status change event StatusChangeEvent [timestamp=1534901471195, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:11.197+08:00","@version":1,"message":"DiscoveryClient_DDBES-SERVICE-ADMIN/192.168.1.15:8880: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:11.204+08:00","@version":1,"message":"New Application Application [id=c9d154c6, name=EUREKA-SERVER, managementUrl=http://192.168.1.15:8761, healthUrl=http://192.168.1.15:8761/health, serviceUrl=http://192.168.1.15:8761] registered ","logger_name":"de.codecentric.boot.admin.registry.ApplicationRegistry","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:11.230+08:00","@version":1,"message":"DiscoveryClient_DDBES-SERVICE-ADMIN/192.168.1.15:8880 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:11.239+08:00","@version":1,"message":"New Application Application [id=a07c5c6b, name=SPRING-CLOUD-CONFIG-SERVER, managementUrl=http://192.168.1.15:7010, healthUrl=http://192.168.1.15:7010/health, serviceUrl=http://192.168.1.15:7010] registered ","logger_name":"de.codecentric.boot.admin.registry.ApplicationRegistry","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:12.229+08:00","@version":1,"message":"Tomcat started on port(s): 8880 (http)","logger_name":"org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:12.230+08:00","@version":1,"message":"Updating port to 8880","logger_name":"org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:12.231+08:00","@version":1,"message":"Updating port to 8880","logger_name":"org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:12.235+08:00","@version":1,"message":"Started ServiceAdminApplication in 9.619 seconds (JVM running for 10.492)","logger_name":"com.joinu.ddbes.serviceadmin.ServiceAdminApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:13.275+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"RMI TCP Connection(11)-127.0.0.1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:14.191+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"RMI TCP Connection(11)-127.0.0.1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.229+08:00","@version":1,"message":"New Application Application [id=fbad01fc, name=DDBES-SERVICE-ADMIN, managementUrl=http://192.168.1.15:8880, healthUrl=http://192.168.1.15:8880/health, serviceUrl=http://192.168.1.15:8880] registered ","logger_name":"de.codecentric.boot.admin.registry.ApplicationRegistry","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.332+08:00","@version":1,"message":"Initializing Spring FrameworkServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.332+08:00","@version":1,"message":"FrameworkServlet 'dispatcherServlet': initialization started","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.355+08:00","@version":1,"message":"FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.369+08:00","@version":1,"message":"Mapped URL path [/api/applications/a07c5c6b/health/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.369+08:00","@version":1,"message":"Mapped URL path [/api/applications/a07c5c6b/env/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.370+08:00","@version":1,"message":"Mapped URL path [/api/applications/a07c5c6b/metrics/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.370+08:00","@version":1,"message":"Mapped URL path [/api/applications/a07c5c6b/trace/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.370+08:00","@version":1,"message":"Mapped URL path [/api/applications/a07c5c6b/dump/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.370+08:00","@version":1,"message":"Mapped URL path [/api/applications/a07c5c6b/jolokia/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.370+08:00","@version":1,"message":"Mapped URL path [/api/applications/a07c5c6b/info/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.370+08:00","@version":1,"message":"Mapped URL path [/api/applications/a07c5c6b/logfile/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.370+08:00","@version":1,"message":"Mapped URL path [/api/applications/a07c5c6b/refresh/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.370+08:00","@version":1,"message":"Mapped URL path [/api/applications/a07c5c6b/flyway/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.371+08:00","@version":1,"message":"Mapped URL path [/api/applications/a07c5c6b/liquibase/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.371+08:00","@version":1,"message":"Mapped URL path [/api/applications/a07c5c6b/heapdump/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.371+08:00","@version":1,"message":"Mapped URL path [/api/applications/c9d154c6/health/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.371+08:00","@version":1,"message":"Mapped URL path [/api/applications/c9d154c6/env/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.371+08:00","@version":1,"message":"Mapped URL path [/api/applications/c9d154c6/metrics/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.371+08:00","@version":1,"message":"Mapped URL path [/api/applications/c9d154c6/trace/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.371+08:00","@version":1,"message":"Mapped URL path [/api/applications/c9d154c6/dump/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.371+08:00","@version":1,"message":"Mapped URL path [/api/applications/c9d154c6/jolokia/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.371+08:00","@version":1,"message":"Mapped URL path [/api/applications/c9d154c6/info/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.371+08:00","@version":1,"message":"Mapped URL path [/api/applications/c9d154c6/logfile/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.372+08:00","@version":1,"message":"Mapped URL path [/api/applications/c9d154c6/refresh/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.372+08:00","@version":1,"message":"Mapped URL path [/api/applications/c9d154c6/flyway/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.372+08:00","@version":1,"message":"Mapped URL path [/api/applications/c9d154c6/liquibase/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.373+08:00","@version":1,"message":"Mapped URL path [/api/applications/c9d154c6/heapdump/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.373+08:00","@version":1,"message":"Mapped URL path [/api/applications/fbad01fc/health/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.373+08:00","@version":1,"message":"Mapped URL path [/api/applications/fbad01fc/env/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.373+08:00","@version":1,"message":"Mapped URL path [/api/applications/fbad01fc/metrics/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.373+08:00","@version":1,"message":"Mapped URL path [/api/applications/fbad01fc/trace/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.374+08:00","@version":1,"message":"Mapped URL path [/api/applications/fbad01fc/dump/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.374+08:00","@version":1,"message":"Mapped URL path [/api/applications/fbad01fc/jolokia/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.374+08:00","@version":1,"message":"Mapped URL path [/api/applications/fbad01fc/info/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.374+08:00","@version":1,"message":"Mapped URL path [/api/applications/fbad01fc/logfile/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.374+08:00","@version":1,"message":"Mapped URL path [/api/applications/fbad01fc/refresh/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.374+08:00","@version":1,"message":"Mapped URL path [/api/applications/fbad01fc/flyway/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.374+08:00","@version":1,"message":"Mapped URL path [/api/applications/fbad01fc/liquibase/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:31:31.374+08:00","@version":1,"message":"Mapped URL path [/api/applications/fbad01fc/heapdump/**] onto handler of type [class de.codecentric.boot.admin.zuul.OptionsDispatchingZuulController]","logger_name":"org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:36:04.892+08:00","@version":1,"message":"task supervisor rejected the task","logger_name":"com.netflix.discovery.TimedSupervisorTask","thread_name":"AsyncResolver-bootstrap-0","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@4f8b3f11 rejected from java.util.concurrent.ThreadPoolExecutor@45735461[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]\r\n\tat java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2063)\r\n\tat java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:830)\r\n\tat java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1379)\r\n\tat java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:112)\r\n\tat com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:62)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2018-08-22T09:36:11.177+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:36:24.135+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-6","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:36:25.066+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-6","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:41:11.181+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:41:27.741+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:41:28.628+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:46:11.185+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:46:43.686+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-7","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:46:44.774+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-7","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:51:11.187+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:51:43.802+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:51:44.696+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:56:11.190+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:57:03.796+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-8","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T09:57:05.062+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-8","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:01:11.192+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:02:23.756+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-4","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:02:24.598+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-4","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:06:11.195+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:07:24.001+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-9","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:07:24.942+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-9","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:11:13.312+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:12:35.725+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-5","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:12:36.572+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-5","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:16:13.323+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:17:35.846+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-10","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:17:36.763+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-10","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:21:13.327+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:21:17.123+08:00","@version":1,"message":"Health check failed","logger_name":"org.springframework.boot.actuate.health.MailHealthIndicator","thread_name":"http-nio-8880-exec-10","level":"WARN","level_value":30000,"stack_trace":"javax.mail.MessagingException: Could not connect to SMTP host: smtp.qq.com, port: 465\r\n\tat com.sun.mail.smtp.SMTPTransport.openServer(SMTPTransport.java:2120)\r\n\tat com.sun.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:712)\r\n\tat javax.mail.Service.connect(Service.java:366)\r\n\tat org.springframework.mail.javamail.JavaMailSenderImpl.connectTransport(JavaMailSenderImpl.java:501)\r\n\tat org.springframework.mail.javamail.JavaMailSenderImpl.testConnection(JavaMailSenderImpl.java:382)\r\n\tat org.springframework.boot.actuate.health.MailHealthIndicator.doHealthCheck(MailHealthIndicator.java:40)\r\n\tat org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:43)\r\n\tat org.springframework.boot.actuate.health.CompositeHealthIndicator.health(CompositeHealthIndicator.java:68)\r\n\tat org.springframework.boot.actuate.endpoint.HealthEndpoint.invoke(HealthEndpoint.java:86)\r\n\tat org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.getCurrentHealth(HealthMvcEndpoint.java:178)\r\n\tat org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.getHealth(HealthMvcEndpoint.java:167)\r\n\tat org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(HealthMvcEndpoint.java:144)\r\n\tat sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:635)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:742)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:111)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.SocketTimeoutException: Read timed out\r\n\tat java.net.SocketInputStream.socketRead0(Native Method)\r\n\tat java.net.SocketInputStream.socketRead(SocketInputStream.java:116)\r\n\tat java.net.SocketInputStream.read(SocketInputStream.java:171)\r\n\tat java.net.SocketInputStream.read(SocketInputStream.java:141)\r\n\tat sun.security.ssl.InputRecord.readFully(InputRecord.java:465)\r\n\tat sun.security.ssl.InputRecord.read(InputRecord.java:503)\r\n\tat sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:983)\r\n\tat sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1385)\r\n\tat sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1413)\r\n\tat sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1397)\r\n\tat com.sun.mail.util.SocketFetcher.configureSSLSocket(SocketFetcher.java:598)\r\n\tat com.sun.mail.util.SocketFetcher.createSocket(SocketFetcher.java:372)\r\n\tat com.sun.mail.util.SocketFetcher.getSocket(SocketFetcher.java:238)\r\n\tat com.sun.mail.smtp.SMTPTransport.openServer(SMTPTransport.java:2084)\r\n\t... 76 common frames omitted\r\n"}
{"@timestamp":"2018-08-22T10:22:55.965+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-5","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:22:56.811+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-5","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:26:13.340+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:27:59.920+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-10","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:28:04.934+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-10","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:31:13.345+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:33:04.990+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-5","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:33:05.865+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-5","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:36:13.348+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:38:05.011+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-10","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:38:05.927+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-10","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:41:13.353+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:43:05.088+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-5","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:43:06.435+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-5","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:46:13.356+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:47:45.362+08:00","@version":1,"message":"Health check failed","logger_name":"org.springframework.boot.actuate.health.MailHealthIndicator","thread_name":"http-nio-8880-exec-8","level":"WARN","level_value":30000,"stack_trace":"com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1\r\n\tat com.sun.mail.smtp.SMTPTransport.openServer(SMTPTransport.java:2118)\r\n\tat com.sun.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:712)\r\n\tat javax.mail.Service.connect(Service.java:366)\r\n\tat org.springframework.mail.javamail.JavaMailSenderImpl.connectTransport(JavaMailSenderImpl.java:501)\r\n\tat org.springframework.mail.javamail.JavaMailSenderImpl.testConnection(JavaMailSenderImpl.java:382)\r\n\tat org.springframework.boot.actuate.health.MailHealthIndicator.doHealthCheck(MailHealthIndicator.java:40)\r\n\tat org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:43)\r\n\tat org.springframework.boot.actuate.health.CompositeHealthIndicator.health(CompositeHealthIndicator.java:68)\r\n\tat org.springframework.boot.actuate.endpoint.HealthEndpoint.invoke(HealthEndpoint.java:86)\r\n\tat org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.getCurrentHealth(HealthMvcEndpoint.java:178)\r\n\tat org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.getHealth(HealthMvcEndpoint.java:167)\r\n\tat org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(HealthMvcEndpoint.java:144)\r\n\tat sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:635)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:742)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:111)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.ConnectException: Connection timed out: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:589)\r\n\tat java.net.Socket.connect(Socket.java:538)\r\n\tat com.sun.mail.util.SocketFetcher.createSocket(SocketFetcher.java:331)\r\n\tat com.sun.mail.util.SocketFetcher.getSocket(SocketFetcher.java:238)\r\n\tat com.sun.mail.smtp.SMTPTransport.openServer(SMTPTransport.java:2084)\r\n\t... 76 common frames omitted\r\n"}
{"@timestamp":"2018-08-22T10:48:09.960+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-9","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:48:10.851+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-9","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:51:13.360+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:53:25.835+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-5","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:53:26.762+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-5","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:56:13.362+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:58:26.108+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-10","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T10:58:27.088+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-10","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:01:13.365+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:03:46.087+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-6","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:03:47.110+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-6","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:06:13.377+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:08:48.981+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:08:49.946+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:11:13.379+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:13:50.164+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-6","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:13:51.019+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-6","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:16:13.384+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:19:05.861+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:19:06.714+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:21:13.388+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:24:05.885+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-7","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:24:06.762+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-7","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:26:13.391+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:29:05.881+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:29:06.803+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:31:13.394+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:34:26.001+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-8","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:34:26.859+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-8","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:36:13.395+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:39:45.976+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-4","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:39:46.880+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-4","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:41:13.400+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:45:05.833+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-10","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:45:06.741+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-10","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:46:13.401+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:50:15.877+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-5","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:50:16.873+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-5","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T11:51:13.404+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T12:20:05.125+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-8","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T12:20:05.963+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-8","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T12:22:02.654+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T12:25:05.813+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-3","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T12:25:06.695+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-3","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T12:27:02.658+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T12:30:09.877+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-8","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T12:30:10.798+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-8","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T12:32:02.663+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T12:35:25.918+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-4","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T12:35:26.899+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-4","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T12:37:02.667+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T12:40:25.977+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-9","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T12:40:26.853+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-9","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T12:42:02.671+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T12:45:45.812+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-5","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T12:45:50.952+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-5","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T12:47:02.674+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T12:50:45.820+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-10","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T12:50:46.743+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-10","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T12:52:02.677+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T12:55:49.884+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-5","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T12:55:50.820+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-5","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T12:57:02.681+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:01:05.973+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:01:06.883+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:02:02.685+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:06:10.116+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-6","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:06:15.248+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-6","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:07:02.690+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:11:14.896+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:11:15.811+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:12:02.693+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:16:14.957+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-6","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:16:19.880+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-6","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:17:02.697+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:21:15.119+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:21:16.046+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:22:02.701+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:26:34.971+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-7","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:26:35.926+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-7","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:27:02.704+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:31:34.997+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:31:35.941+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:32:02.706+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:36:54.925+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-8","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:36:56.144+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-8","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:37:02.710+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:41:54.949+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-3","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:41:55.996+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-3","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:42:02.714+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:46:55.068+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-8","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:46:56.424+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-8","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:47:02.717+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:52:02.722+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:52:14.994+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-4","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:52:15.978+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-4","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:57:02.724+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:57:15.567+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-9","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T13:57:16.561+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-9","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:02:02.726+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:02:35.030+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-5","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:02:36.385+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-5","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:07:02.730+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:07:54.932+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:07:55.960+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:11:55.355+08:00","@version":1,"message":"Health check failed","logger_name":"org.springframework.boot.actuate.health.MailHealthIndicator","thread_name":"http-nio-8880-exec-1","level":"WARN","level_value":30000,"stack_trace":"com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1\r\n\tat com.sun.mail.smtp.SMTPTransport.openServer(SMTPTransport.java:2118)\r\n\tat com.sun.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:712)\r\n\tat javax.mail.Service.connect(Service.java:366)\r\n\tat org.springframework.mail.javamail.JavaMailSenderImpl.connectTransport(JavaMailSenderImpl.java:501)\r\n\tat org.springframework.mail.javamail.JavaMailSenderImpl.testConnection(JavaMailSenderImpl.java:382)\r\n\tat org.springframework.boot.actuate.health.MailHealthIndicator.doHealthCheck(MailHealthIndicator.java:40)\r\n\tat org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:43)\r\n\tat org.springframework.boot.actuate.health.CompositeHealthIndicator.health(CompositeHealthIndicator.java:68)\r\n\tat org.springframework.boot.actuate.endpoint.HealthEndpoint.invoke(HealthEndpoint.java:86)\r\n\tat org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.getCurrentHealth(HealthMvcEndpoint.java:178)\r\n\tat org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.getHealth(HealthMvcEndpoint.java:167)\r\n\tat org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(HealthMvcEndpoint.java:144)\r\n\tat sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:635)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:742)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:111)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.ConnectException: Connection timed out: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:589)\r\n\tat java.net.Socket.connect(Socket.java:538)\r\n\tat com.sun.mail.util.SocketFetcher.createSocket(SocketFetcher.java:331)\r\n\tat com.sun.mail.util.SocketFetcher.getSocket(SocketFetcher.java:238)\r\n\tat com.sun.mail.smtp.SMTPTransport.openServer(SMTPTransport.java:2084)\r\n\t... 76 common frames omitted\r\n"}
{"@timestamp":"2018-08-22T14:12:02.733+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:12:55.984+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-5","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:12:57.374+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-5","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:17:02.736+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:18:00.445+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-10","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:18:01.574+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-10","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:22:02.740+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:23:16.079+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-6","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:23:17.133+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-6","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:27:02.744+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:28:16.583+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:28:17.621+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:32:02.749+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:33:35.910+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-7","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:33:36.837+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-7","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:37:02.751+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:38:35.919+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:38:36.987+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:42:02.756+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:43:35.965+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-7","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:43:41.073+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-7","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:47:02.759+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:48:55.710+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-3","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:48:56.656+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-3","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:52:02.763+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:53:55.866+08:00","@version":1,"message":"Fetching config from server at: http://192.168.1.15:7010/","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-8","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:53:56.798+08:00","@version":1,"message":"Located environment: name=service-admin, profiles=[dev], label=master, version=03f981cd1dd511da68e957593bd3eae4991d007d, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"http-nio-8880-exec-8","level":"INFO","level_value":20000}
{"@timestamp":"2018-08-22T14:57:02.765+08:00","@version":1,"message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
